//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.05.08 at 02:04:20 PM PDT 
//


package gov.vha.isaac.ochre.deployment.terminolgy.config;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the gov.vha.isaac.ochre.deployment.terminolgy.config package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _IsList_QNAME = new QName("", "IsList");
    private final static QName _Active_QNAME = new QName("", "Active");
    private final static QName _VUID_QNAME = new QName("", "VUID");
    private final static QName _Type_QNAME = new QName("", "Type");
    private final static QName _AllowEmpty_QNAME = new QName("", "AllowEmpty");
    private final static QName _IncludeWithChange_QNAME = new QName("", "IncludeWithChange");
    private final static QName _RelationshipName_QNAME = new QName("", "RelationshipName");
    private final static QName _PropertyValue_QNAME = new QName("", "PropertyValue");
    private final static QName _SubsetName_QNAME = new QName("", "SubsetName");
    private final static QName _Inverse_QNAME = new QName("", "Inverse");
    private final static QName _PropertyType_QNAME = new QName("", "PropertyType");
    private final static QName _Name_QNAME = new QName("", "Name");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: gov.vha.isaac.ochre.deployment.terminolgy.config
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Subset }
     * 
     */
    public Subset createSubset() {
        return new Subset();
    }

    /**
     * Create an instance of {@link Dependencies }
     * 
     */
    public Dependencies createDependencies() {
        return new Dependencies();
    }

    /**
     * Create an instance of {@link DependentSubset }
     * 
     */
    public DependentSubset createDependentSubset() {
        return new DependentSubset();
    }

    /**
     * Create an instance of {@link Properties }
     * 
     */
    public Properties createProperties() {
        return new Properties();
    }

    /**
     * Create an instance of {@link Property }
     * 
     */
    public Property createProperty() {
        return new Property();
    }

    /**
     * Create an instance of {@link Relationships }
     * 
     */
    public Relationships createRelationships() {
        return new Relationships();
    }

    /**
     * Create an instance of {@link Relationship }
     * 
     */
    public Relationship createRelationship() {
        return new Relationship();
    }

    /**
     * Create an instance of {@link Designations }
     * 
     */
    public Designations createDesignations() {
        return new Designations();
    }

    /**
     * Create an instance of {@link Designation }
     * 
     */
    public Designation createDesignation() {
        return new Designation();
    }

    /**
     * Create an instance of {@link Terminology }
     * 
     */
    public Terminology createTerminology() {
        return new Terminology();
    }

    /**
     * Create an instance of {@link Domains }
     * 
     */
    public Domains createDomains() {
        return new Domains();
    }

    /**
     * Create an instance of {@link Domain }
     * 
     */
    public Domain createDomain() {
        return new Domain();
    }

    /**
     * Create an instance of {@link CodeSystem }
     * 
     */
    public CodeSystem createCodeSystem() {
        return new CodeSystem();
    }

    /**
     * Create an instance of {@link States }
     * 
     */
    public States createStates() {
        return new States();
    }

    /**
     * Create an instance of {@link State }
     * 
     */
    public State createState() {
        return new State();
    }

    /**
     * Create an instance of {@link MapSets }
     * 
     */
    public MapSets createMapSets() {
        return new MapSets();
    }

    /**
     * Create an instance of {@link MapSet }
     * 
     */
    public MapSet createMapSet() {
        return new MapSet();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "IsList")
    public JAXBElement<Boolean> createIsList(Boolean value) {
        return new JAXBElement<Boolean>(_IsList_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Active")
    public JAXBElement<Boolean> createActive(Boolean value) {
        return new JAXBElement<Boolean>(_Active_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Long }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "VUID")
    public JAXBElement<Long> createVUID(Long value) {
        return new JAXBElement<Long>(_VUID_QNAME, Long.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Type")
    public JAXBElement<String> createType(String value) {
        return new JAXBElement<String>(_Type_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "AllowEmpty")
    public JAXBElement<Boolean> createAllowEmpty(Boolean value) {
        return new JAXBElement<Boolean>(_AllowEmpty_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "IncludeWithChange")
    public JAXBElement<String> createIncludeWithChange(String value) {
        return new JAXBElement<String>(_IncludeWithChange_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "RelationshipName")
    public JAXBElement<String> createRelationshipName(String value) {
        return new JAXBElement<String>(_RelationshipName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "PropertyValue")
    public JAXBElement<String> createPropertyValue(String value) {
        return new JAXBElement<String>(_PropertyValue_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SubsetName")
    public JAXBElement<String> createSubsetName(String value) {
        return new JAXBElement<String>(_SubsetName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Inverse")
    public JAXBElement<Boolean> createInverse(Boolean value) {
        return new JAXBElement<Boolean>(_Inverse_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "PropertyType")
    public JAXBElement<String> createPropertyType(String value) {
        return new JAXBElement<String>(_PropertyType_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Name")
    public JAXBElement<String> createName(String value) {
        return new JAXBElement<String>(_Name_QNAME, String.class, null, value);
    }

}
